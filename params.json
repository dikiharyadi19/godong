{"name":"Godong","tagline":"Easiest dynamic http route handler for golang","body":"<img src=\"http://oi59.tinypic.com/2v29m5g.jpg\" alt=\"Godong logo\" align=\"right\">\r\n\r\nGodong\r\n======\r\nEasiest dynamic http route handler for golang.\r\n\r\nIntroduction\r\n======\r\nGodong is dynamic route handler for golang. Godong will automatically create route and the handler based on the method of registered struct.\r\n\r\nInstalation\r\n======\r\nUse `go get` to download the library.\r\n\r\n```\r\ngo get github.com/novalagung/godong\r\n```\r\n\r\nSimple example\r\n======\r\nGodong is very easy to use. First you need to prepare a `struct`. Then create methods with parameters are same as `http.handleFunc` callback function. The name of the method must start with `Action_`.\r\n\r\nMethod's name will become route name, and method's body will applied as callback of `http.handleFunc`.\r\n\r\n```go\r\npackage controller\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"net/http\"\r\n)\r\n\r\ntype Dashboard struct{}\r\n\r\nfunc (d *Dashboard) Action_Index(w http.ResponseWriter, r *http.Request) {\r\n    fmt.Fprintf(w, \"/dashboard/index\")\r\n}\r\n\r\nfunc (d *Dashboard) Action_AboutUs(w http.ResponseWriter, r *http.Request) {\r\n    fmt.Fprintf(w, \"/dashboard/about-us\")\r\n}\r\n```\r\n\r\nOn `main` package, include the package of our `struct`. Also include the `godong` library. Then create empty object variabel using `struct Dashboard`. Call `godong.Route`, use the variabel we just created as parameter. Pass it by reference.\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n    \"github.com/novalagung/godong\"\r\n    \"github.com/novalagung/test/controller\"\r\n    \"net/http\"\r\n)\r\n\r\nfunc main() {\r\n    godong.Route(&controller.Dashboard{})\r\n\r\n    http.ListenAndServe(\":3000\", nil)\r\n}\r\n```\r\n\r\nGodong only cover routes declaration. Thats make `http.ListenAndServer` need to be called manually. This make godong special, because of this we can also register another route like usual.\r\n\r\nDocumentation\r\n======\r\n\r\nGodong will register all methods of applied struct as route on `http.HandleRoute`.\r\n\r\nBasically how to use godong is just by creating new instance of the controller's struct, then pass it by reference through `godong.Route`.\r\n\r\nThe generated route name will be `/controller/action`. \r\n\r\nOn the routing process, godong will do several things over action method before it applied as route.\r\n\r\n* Add *slash* character before controller name\r\n* Separate controller and action name using *slash*\r\n* Remove *Action_* prefix\r\n* Convert *underscore* of action name to *slash*\r\n* Separate capitalized action name using *dash*\r\n* Then convert the action name to lower case\r\n\r\nExample:\r\n\r\n```\r\nController action : Dashboard.Action_AboutUs\r\ngenerated route   : /dashboard/about-us\r\n\r\nController action : DataAnalytic.Action_Data_GetData\r\ngenerated route   : /data-analytic/data/get-data\r\n```\r\n\r\nThere are some other things which is configurable.\r\n\r\n### Show applied routes \r\n\r\nSet value `DebugMode` to `true`, so whenever `.godong.Route` called, all actions which are successfully registered will printed. Also detailed error message will shown (if there is an error) by enabling this configuration.\r\n\r\n```go\r\ngodong.Debug = true\r\ngodong.Route(&controller.Dashboard{})\r\n```\r\n\r\nBelow is the sample output.\r\n\r\n![Debug mode enabled](http://oi61.tinypic.com/4ut107.jpg)\r\n\r\n### Set default action\r\n\r\nAll routes will defined on schema `/controller/action`. To define the `/` route, fill the `godong.DefaultAction` using action name of picked controller. Please see example below.\r\n\r\n```go\r\ngodong.Debug = true\r\ngodong.DefaultAction = \"Dashboard.Action_Index\"\r\ngodong.Route(&controller.Dashboard{})\r\ngodong.Route(&controller.Analytic{})\r\n```\r\n\r\n`Dashboard.Action_Index` mean that we will use `Action_Index` method of struct `Dashboard` as `/` route.\r\n\r\n![Default action enabled](http://oi60.tinypic.com/a5dtgh.jpg)\r\n\r\n### Enable hidden index route\r\n\r\nGodong will route index action as `/controller/index`. It's possible to make route `/controller` only for index action by change the value of `godong.HiddenIndex` to `true`. 2 routes will be registered using same handler: `/controller/index` and `/controller`.\r\n\r\n```go\r\ngodong.Debug = true\r\ngodong.HiddenIndex = true\r\ngodong.Route(&controller.Dashboard{})\r\ngodong.Route(&controller.Analytic{})\r\n```\r\n\r\nIf you enabled debug mode, the `/controller` will be displayed.\r\n\r\n![Hidden index enabled](http://oi60.tinypic.com/23mpag.jpg)\r\n\r\n### Change url mode to Capitalized\r\n\r\nBy default godong will make some changes on the action name, doing some conversion on it (you may have read the explanation on the opening of Documentation section).\r\n\r\nThe default *dashed mode* url can be changed to *capitalized mode*. Below is the comparison of dashed and capitalized mode url.\r\n\r\n```\r\ncontroller action : Dashboard.Action_Index\r\ndashed mode       : /dashboard/index\r\ncapitalized mode  : /Dashboard/Index\r\n\r\ncontroller action : DataAnalytic.Action_Data_GetData\r\ndashed mode       : /data-analytic/data/get-data\r\ncapitalized mode  : /DataAnalytic/Data/GetData\r\n```\r\n\r\nHow to do it, just by change the `godong.UrlMode`'s value to `godong.UrlModeCapitalized`.\r\n\r\n```go\r\ngodong.Debug = true\r\ngodong.UrlMode = godong.UrlModeCapitalized\r\ngodong.Route(&controller.Dashboard{})\r\n```\r\n\r\nThe default value of `godong.UrlMode` is `godong.UrlModeDashed`.\r\n\r\n![Capitalized mode url](http://oi59.tinypic.com/qozqd1.jpg)\r\n\r\nAPI Reference\r\n======\r\n### godong.Route()\r\n\r\nApply action method registered struct as route `http.HandleRoute`. Require one parameter, instance of the struct, need to be passed by reference.\r\n\r\nExample:\r\n\r\n```go\r\ngodong.Route(&controller.Dashboard{})\r\n```\r\n\r\n### godong.Debug\r\n\r\nShow all route map on the command line if set to true. \r\n\r\nThis property is boolean type. Default value is `false`.\r\n\r\nExample:\r\n\r\n```go\r\ngodong.Debug = true\r\n```\r\n\r\n### godong.DefaultAction\r\n\r\nSet `/` url using registered action.\r\n\r\nThis property is boolean type. Default value is `\"\"`.\r\n\r\nExample:\r\n\r\n```go\r\ngodong.DefaultAction = \"Dashboard.Action_Index\"\r\n```\r\n\r\n### godong.HiddenIndex\r\n\r\nEnable `/controller` route which is represent the `/controller/index` route.\r\n\r\nThis property is boolean type. Default value is `false`.\r\n\r\nExample:\r\n\r\n```go\r\ngodong.HiddenIndex = true\r\n```\r\n\r\n### godong.UrlMode\r\n\r\nPick the url mode, is it dashed or capitalized.\r\n\r\nThis property is enum type. Availables option are:\r\n\r\n* godong.UrlModeDashed\r\n* godong.UrlModeCapitalized\r\n\r\nDefault value is `godong.UrlModeDashed`.\r\n\r\nExample:\r\n\r\n```go\r\ngodong.UrlMode = UrlModeCapitalized\r\n```\r\n\r\nContribution\r\n======\r\nFeel free to add contribution to this project by fork -> pull request.\r\n\r\nLicense\r\n======\r\nThe MIT License (MIT)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}