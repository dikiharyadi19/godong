{"name":"Godong","tagline":"Easiest dynamic http route handler for golang","body":"![Godong logo](http://oi58.tinypic.com/az78fs.jpg)\r\n\r\nGodong\r\n======\r\nEasiest dynamic http route handler for golang\r\n\r\nIntroduction\r\n======\r\nGodong is dynamic route handler for golang. Godong will automatically create route and the handler based on the method of registered struct.\r\n\r\nInstalation\r\n======\r\nUse `go get` to download the library.\r\n\r\n```\r\ngo get github.com/novalagung/godong\r\n```\r\n\r\nSimple example\r\n======\r\nGodong is very easy to use. First you need to prepare a `struct`. Then create methods with parameters are same as `http.handleFunc` callback function. The name of the method must start with `Action_`.\r\n\r\nMethod's name will become route name, and method's body will applied as callback of `http.handleFunc`.\r\n\r\n```go\r\npackage controller\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"net/http\"\r\n)\r\n\r\ntype Dashboard struct{}\r\n\r\nfunc (d *Dashboard) Action_Index(w http.ResponseWriter, r *http.Request) {\r\n\tfmt.Fprintf(w, \"/dashboard/index\")\r\n}\r\n\r\nfunc (d *Dashboard) Action_AboutUs(w http.ResponseWriter, r *http.Request) {\r\n\tfmt.Fprintf(w, \"/dashboard/about-us\")\r\n}\r\n```\r\n\r\nOn `main` package, include the package of our `struct`. Also include the `godong` library. Then create empty object variabel using `struct Dashboard`. Call `godong.Route`, use the variabel we just created as parameter. Pass it by reference.\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"github.com/novalagung/godong\"\r\n\t\"github.com/novalagung/test/controller\"\r\n\t\"net/http\"\r\n)\r\n\r\nfunc main() {\r\n\tgodong.Route(&controller.Dashboard{})\r\n\r\n\thttp.ListenAndServe(\":3000\", nil)\r\n}\r\n```\r\n\r\nGodong only cover routes declaration. Thats make `http.ListenAndServer` need to be called manually. This make godong special, because of this we can also register another route like usual.\r\n\r\nDocumentation\r\n======\r\nNot yet.\r\n\r\nContribution\r\n======\r\nFeel free to add contribution to this project by fork -> pull request.\r\n\r\nLicense\r\n======\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2015 Noval Agung Prayogo\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}